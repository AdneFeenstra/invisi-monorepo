// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Invoice {
  id        String      @id @default(cuid())
  client    String
  amount    Float
  status    String
  createdAt DateTime    @default(now())

  timeEntries TimeEntry[] // ✅ Relation added
}


model TimeEntry {
  id          String    @id @default(cuid())
  description String
  duration    Float     // in uren
  date        DateTime
  invoice     Invoice?  @relation(fields: [invoiceId], references: [id])
  invoiceId   String?

  createdAt   DateTime  @default(now())
}

model HarvestLog {
  id          String   @id @default(cuid())
  externalId  String   @unique
  user        String
  project     String
  task        String
  notes       String?
  hours       Float
  spentDate   DateTime
  createdAt   DateTime @default(now())
}

model HarvestConnection {
  id          String   @id @default(cuid())
  userId      String   @unique
  accessToken String
  refreshToken String
  expiresAt   DateTime
  tokenType   String
  scope       String
  createdAt   DateTime @default(now())
}

model ClickUpConnection {
  id            String   @id @default(cuid())
  userId        String   @unique
  accessToken   String
  tokenType     String
  workspaceId   String
  workspaceName String
  createdAt     DateTime @default(now())
}

model QuickBooksConnection {
  id           String   @id @default(cuid())
  userId       String   @unique
  accessToken  String
  refreshToken String
  expiresAt    DateTime
  realmId      String   // ✅ deze moet erin
  createdAt    DateTime @default(now())
}


model SlackConnection {
  id           String   @id @default(cuid())
  userId       String   @unique
  accessToken  String
  botUserId    String
}


